{"version":3,"sources":["app.start.coffee","api/crypto.service.coffee","api/relay.service.coffee","request-pane/request-pane.controller.coffee","request-pane/request-pane.directive.coffee"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["angular.module('app', [])\n\n# filter to test object emptiness\nangular.module('app').filter 'isEmpty', ->\n  (obj) ->\n    for key of obj\n      if obj.hasOwnProperty(key)\n        return false\n    true\n","class CryptoService\n\n  # You can provide your localhost:port value instead of test\n  # to test local ZAX dashboard with local ZAX relay.\n  # Take care not to mix up ports of these services when\n  # both are running locally\n  relayUrl: ->\n    # Comment this out to use alternative relay url\n    return @$window.location.origin\n\n    # Uncomment below if you prefer to always connect to external relay\n    # from your local build\n    #\n    # org = @$window.location.origin\n    # # Configure your relay address. Likely 'http://localhost:8080' for local\n    # relay = 'https://z.vault12.com'\n    # return if org.includes 'localhost' then relay else org\n\n  constructor: (@$window)->\n    @glow = @$window.glow\n    @nacl = @$window.nacl_factory.instantiate( -> )\n    @Mailbox = @glow.MailBox\n    @Relay = @glow.Relay\n    @KeyRing = @glow.KeyRing\n    @Keys = @glow.Keys\n    @CryptoStorage = @glow.CryptoStorage\n    @CryptoStorage.startStorageSystem new @glow.SimpleStorageDriver(@relayUrl())\n\n    # use Axios library for Ajax implementation\n    @glow.Utils.setAjaxImpl (url, data)->\n      axios\n        url: url\n        method: 'post'\n        headers:\n          'Accept': 'text/plain'\n          'Content-Type': 'text/plain'\n        data: data\n        responseType: 'text'\n        timeout: 2000\n      .then (response)->\n        response.data\n\nangular\n  .module 'app'\n  .service 'CryptoService', [\n    '$window'\n    CryptoService\n  ]\n","class RelayService\n  host: \"\"\n  headers: {\"Content-Type\": \"text/plain\"}\n  mailboxes: {}\n\n  constructor: (@$http, @$q, @CryptoService, $location) ->\n    @host = @CryptoService.relayUrl()\n    @_newRelay()\n\n  # relay commands\n  messageCount: (mailbox)->\n    mailbox.connectToRelay(@relay).then =>\n      mailbox.relayCount(@relay).then (count)=>\n        mailbox.messageCount = count\n        count\n\n  getMessages: (mailbox)->\n    mailbox.getRelayMessages(@relay)\n\n  deleteMessages: (mailbox, noncesToDelete)->\n    mailbox.connectToRelay(@relay).then =>\n      mailbox.relayDelete(noncesToDelete, @relay)\n\n  # mailbox wrapper\n  newMailbox: (mailboxName, options = {})=>\n    # make our mailboxes\n    next = null\n    if options.secret\n      mailboxName = @_randomString() if not mailboxName\n      next = @CryptoService.Mailbox.fromSecKey(options.secret.fromBase64(), mailboxName).then (mailbox)=>\n        console.log \"created mailbox #{mailboxName}:#{options.secret} from secret\"\n        mailbox\n    else if options.seed\n      next = @CryptoService.Mailbox.fromSeed(options.seed, mailboxName).then (mailbox)=>\n        console.log \"created mailbox #{mailboxName}:#{options.seed} from seed\"\n        mailbox\n    else\n      next = @CryptoService.Mailbox.new(mailboxName).then (mailbox)=>\n        console.log \"created mailbox #{mailboxName} from scratch\"\n        mailbox\n\n    next.then (mailbox)=>\n      @messageCount(mailbox).then =>\n        # share keys among mailboxes\n        tasks = []\n        for name, mbx of @mailboxes\n          ((name, mbx)=>\n            tasks.push mbx.keyRing.addGuest(mailbox.identity, mailbox.getPubCommKey()).then =>\n              mailbox.keyRing.addGuest(mbx.identity, mbx.getPubCommKey())\n          )(name, mbx)\n\n        @$q.all(tasks).then =>\n          # save the mailbox\n          @mailboxes[mailbox.identity] = mailbox\n          mailbox\n\n  destroyMailbox: (mailbox)->\n    tasks = []\n    for name, mbx of @mailboxes\n      if mailbox.keyRing.storage.root == mbx.keyRing.storage.root\n        ((mailbox, name)=>\n          tasks.push mailbox.selfDestruct(true).then =>\n            console.log 'deleting ' + name\n            delete @mailboxes[name]\n        )(mailbox, name)\n    @$q.all(tasks)\n\n  sendToVia: (recipient, mailbox, message)->\n    mailbox.sendToVia(recipient, @relay, message)\n\n  _newRelay: ->\n    @relay = new @CryptoService.Relay(@host)\n    # @relay.client_token_text = @_randomString()\n\n  _concat: (arrays...)->\n    concatArray = []\n    for array in arrays\n      for item in array\n        concatArray.push item\n    concatArray\n\n  _randomString: (length=32) ->\n    id = \"\"\n    id += Math.random().toString(36).substr(2) while id.length < length\n    id.substr 0, length\n\nangular\n  .module 'app'\n  .service 'RelayService', [\n    '$http'\n    '$q'\n    'CryptoService'\n    '$location'\n    RelayService\n  ]\n","class RequestPaneController\n  mailboxPrefix: \"_mailbox\"\n  constructor: (RelayService, $scope, $q)->\n    # hide notification divs\n    $('#key-confirmation').hide()\n    $('#send-confirmation').hide()\n    # some names to play with\n    first_names = [\"Alice\",\"Bob\",\"Charlie\",\"Chuck\",\"Dave\",\"Erin\",\"Eve\",\"Faith\",\n             \"Frank\",\"Mallory\",\"Oscar\",\"Peggy\",\"Pat\",\"Sam\",\"Sally\",\"Sybil\",\n             \"Trent\",\"Trudy\",\"Victor\",\"Walter\",\"Wendy\"].sort ->\n               .5 - Math.random()\n    @names = []\n    for i in [1..20]\n      for name in first_names\n        if i == 1\n          @names.push \"#{name}\"\n        else\n          @names.push \"#{name} #{i}\"\n\n\n    # what mailboxes are we looking at?\n    $scope.mailboxes = RelayService.mailboxes\n    $scope.relay = RelayService.relay\n    $scope.activeMailbox = null\n\n    # assume we'll need to add a mailbox to play with\n    $scope.mailbox = {}\n    $scope.addMailboxVisible = true\n    $scope.quantity = 3\n\n    # mailbox commands\n    $scope.messageCount = (mailbox)->\n      RelayService.messageCount(mailbox).then ->\n        $scope.$apply()\n\n    $scope.getMessages = (mailbox)->\n      RelayService.getMessages(mailbox).then (data)->\n        if !mailbox.messages\n          mailbox.messages = []\n          mailbox.messagesNonces = []\n        for msg in data\n          unless mailbox.messagesNonces.indexOf(msg.nonce) != -1\n            console.log \"incoming message:\", msg\n            mailbox.messagesNonces.push msg.nonce\n            mailbox.messages.push msg\n        $scope.$apply()\n\n    $scope.deleteMessages = (mailbox, messagesToDelete = null)->\n      noncesToDelete = messagesToDelete or mailbox.messagesNonces or []\n      RelayService.deleteMessages(mailbox, noncesToDelete).then ->\n        if noncesToDelete.length == 0\n          mailbox.messages = []\n          mailbox.messagesNonces = []\n        else\n          for msg in noncesToDelete\n            index = mailbox.messagesNonces.indexOf(msg)\n            mailbox.messagesNonces.splice(index, 1)\n            mailbox.messages.splice(index, 1)\n        $scope.$apply()\n\n    $scope.sendMessage = (mailbox, outgoing)=>\n      RelayService.sendToVia(outgoing.recipient, mailbox, outgoing.message).then (data)->\n        $('#send-confirmation').show().fadeOut(3000)\n        $scope.outgoing = {message: \"\", recipient: \"\"}\n\n    $scope.deleteMailbox = (mailbox)=>\n      name = mailbox.identity\n      RelayService.destroyMailbox(mailbox).then =>\n        localStorage.removeItem \"#{@mailboxPrefix}.#{name}\"\n\n    # show the active mailbox messages\n    $scope.selectMailbox = (mailbox)->\n      $scope.activeMailbox = mailbox\n\n    # internals\n    $scope.addMailbox = (name, options)=>\n      RelayService.newMailbox(name, options).then (mailbox)=>\n        localStorage.setItem \"#{@mailboxPrefix}.#{name}\", mailbox.identity\n        $scope.newMailbox = mailbox # {name: \"\", options: null}\n\n    $scope.addMailboxes = (quantityToAdd)=>\n      [1..quantityToAdd].reduce ((prev, i)=> prev.then => $scope.addMailbox @names.shift()), $q.all()\n\n    $scope.addPublicKey = (mailbox, key)=>\n      if mailbox.keyRing.addGuest key.name, key.key\n        $('#key-confirmation').show().fadeOut(3000)\n        $scope.pubKey = {name: \"\", key: \"\"}\n\n    # add any mailbox stored in localStorage\n    next = $q.all()\n    for key in Object.keys localStorage\n      if key.indexOf(@mailboxPrefix) == 0\n        ((key)->\n          next = next.then -> $scope.addMailbox(localStorage.getItem(key))\n        )(key)\n    next\n\nangular\n  .module 'app'\n  .controller 'RequestPaneController', [\n    'RelayService'\n    '$scope'\n    '$q'\n    RequestPaneController\n  ]\n","requestPane = (RequestService, LoggerService, base64)->\n  directive =\n    transclude: true\n    restrict: 'E'\n    templateUrl: \"request-pane/request-pane.template.html\"\n    controller: \"RequestPaneController\"\n    scope: \"=\"\n    link: (scope, attrs, element)->\n\n  directive\n\nangular\n  .module('app')\n  .directive \"requestPane\", [ requestPane ]\n"]}